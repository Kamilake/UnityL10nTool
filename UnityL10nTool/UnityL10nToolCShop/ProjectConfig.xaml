<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:UnityL10nToolCShop"
    mc:Ignorable="d"
        x:Class="UnityL10nToolCShop.ProjectConfig"
        Title="UnityL10nTool" Height="672" Width="1077.8" Loaded="Window_Loaded" Closed="Window_Closed" d:DataContext="{d:DesignData /SampleData/FontAssetMapCLIs/FontAssetMapCLIs.xaml}" Icon="defaultIcon.ico">
    <Window.Resources>
        <DataTemplate x:Key="ItemTemplate">
            <StackPanel>
                <TextBlock Text="{Binding Property1}"/>
            </StackPanel>
        </DataTemplate>
        <Style TargetType="{x:Type Button}" x:Key="ImageButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid" d:DataContext="{Binding Source={StaticResource FontAssetMapCLIs}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" x:Name="GameNameLabel" Content="Game Name" FontSize="16"/>
            <Label Grid.Column="1" x:Name="MakerNameLabel" Content="Maker Name" VerticalAlignment="Bottom"/>
            <Label Grid.Column="2" x:Name="GamePathLabel"  VerticalAlignment="Bottom" >
                <TextBlock x:Name="GamePathTextBlock" TextTrimming="CharacterEllipsis"><Run Text="Game PathVeryLonggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg"/></TextBlock>
            </Label>
        </Grid>
        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" VerticalAlignment="Top">
            <Button Content="New" VerticalAlignment="Top" Margin="5"/>
            <Button Content="Save" VerticalAlignment="Top" Margin="5" Click="Button_Click_3"/>
            <Button Content="Build" VerticalAlignment="Top" Margin="5" Click="Button_Click_4"/>
        </StackPanel>
        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <TabControl TabStripPlacement="Left">
                <TabItem Header="Font Asset">
                    <TabControl x:Name="FontAssetTabControl" ItemsSource="{Binding Collection}" >
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <Label Content="{Binding Key}" />
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <Grid DataContext="{Binding Value}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <DataGrid x:Name="FontAssetMapDataGrid"  Grid.Row="0" Grid.Column="0" ItemsSource="{Binding News}" AutoGenerateColumns="False" SelectedCellsChanged="FontAssetMapDataGrid_SelectedCellsChanged">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Id}" Header="Id" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetsName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding containerPath}" Header="ContainerPath" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <Grid Grid.Column="1" DataContext="{Binding Path=SelectedItem, ElementName=FontAssetMapDataGrid}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <local:CustomProperties Grid.Row="0" DataContext="{Binding Path=SelectedItem, ElementName=FontAssetMapDataGrid}" />
                                            <Button Grid.Row="1" x:Name="AddEditButton" Content="Apply &amp; Save" Click="Button_Click" IsEnabled="False"/>
                                        </Grid>
                                    </Grid>
                                    <Grid Grid.Row="1" Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Grid.Column="0" Content="Asset list to patch" Padding="5"/>
                                        <DataGrid x:Name="SelectedFontAssetMapDataGrid"  Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Saveds}" AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Id}" Header="Id" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetsName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding containerPath}" Header="ContainerPath" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding selectedOption}" Header="selectedOption" IsReadOnly="True"/>
                                                <DataGridCheckBoxColumn Binding="{Binding useContainerPath}" Header="UseContainerPath" IsReadOnly="True" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <StackPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Orientation="Vertical" FlowDirection="RightToLeft" DataContext="{Binding SelectedItem, ElementName=SelectedFontAssetMapDataGrid}">
                                            <!--Button Content="Edit" VerticalAlignment="Top" Margin="5" Click="Button_Click_1"/-->
                                            <Button Content="Remove" VerticalAlignment="Top" Margin="5" Click="Button_Click_2"/>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                </TabItem>
                <TabItem Header="TextAsset">
                    <Grid x:Name="TextAssetTabControl" DataContext="{Binding}">
                        <TabControl>
                            <TabItem Header="InteractWithTextAsset" >
                                <Grid DataContext="{Binding InteractWithTextAsset}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="1*"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                                        <Button x:Name="LoadFromExternalFileButton" Content="Load from external file" Click="LoadFromExternalFileButton_Click"/>
                                    </StackPanel>
                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <DataGrid x:Name="InteractWithTextAssetDataGridNews"  Grid.Row="0" Grid.Column="0" ItemsSource="{Binding News}" SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}" AutoGenerateColumns="False" Validation.ErrorTemplate="{x:Null}" GotFocus="InteractWithTextAssetDataGridNews_GotFocus">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding assetsName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetName}" Header="AssetName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding containerPath}" Header="ContainerPath" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding ExternalRelativeFilePath}" Header="ExternalRelativeFilePath" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <DataGrid x:Name="InteractWithTextAssetDataGridSaveds"  Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Saveds}" AutoGenerateColumns="False" GotFocus="InteractWithTextAssetDataGridSaveds_GotFocus">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding assetsName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetName}" Header="AssetName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding containerPath}" Header="ContainerPath" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding ExternalRelativeFilePath}" Header="ExternalRelativeFilePath" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                    <Grid Grid.Row="2">
                                        <StackPanel Orientation="Horizontal" DataContext="{Binding Path=SelectedItem}">
                                            <Label Content="Assets Name: " />
                                            <Label Content="{Binding assetsName}"/>
                                            <Label Content=", Asset Name: "/>
                                            <Label Content="{Binding assetName}"/>
                                            <Label Content=", Container Path: "/>
                                            <TextBlock Text="{Binding containerPath}" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                            <Label Content=", Use Container Path: "/>
                                            <CheckBox IsChecked="{Binding useContainerPath}" VerticalAlignment="Center" Checked="UseContainerPathCheckChanged" Unchecked="UseContainerPathCheckChanged"/>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Grid.Row="3" DataContext="{Binding Path=SelectedItem}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="0" Text="{Binding OriginalText, Mode=OneWay}" IsReadOnly="True" 
                                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                 ScrollViewer.CanContentScroll="True"/>
                                        <GridSplitter Grid.Column="1" 
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Center"
                                                      ShowsPreview="True"
                                                      Width="5"/>
                                        <DataGrid Grid.Row="0" Grid.Column="2" ItemsSource="{Binding SelectedItem.Value.Dic, ElementName=LanguagePairDicsCombobox}" AutoGenerateColumns="False" >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Key}" Header="Key" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding Value.Original}" Header="Original" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding Path=Value.Translated}" Header="Translated" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                    <Grid Grid.Row="0" Grid.RowSpan="4" Grid.Column="1" DataContext="{Binding SelectedItem}" DataContextChanged="Grid_DataContextChanged" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                                            <Label Content="Plugin:"/>
                                            <ComboBox x:Name="PluginInteractWithAssetNamesCombobox" SelectedItem="{Binding InteractWithAssetPluginName}" SelectionChanged="PluginInteractWithAssetNamesCombobox_SelectionChanged"/>
                                        </StackPanel>
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ComboBox Grid.Column="0" x:Name="LanguagePairDicsCombobox" ItemsSource="{Binding languagePairDics}" DisplayMemberPath="Key" SelectionChanged="LanguagePairDicsCombobox_SelectionChanged" />
                                            <Button x:Name="LanguagePairDicsNew" Grid.Column="1" Content="New" Click="LanguagePairDicsNew_Click"/>
                                            <Button x:Name="LanguagePairDicsRemove" Grid.Column="2" Content="Remove" Click="LanguagePairDicsRemove_Click"/>
                                        </Grid>
                                        <local:TextAssetAssetMapOptionsProperties Grid.Row="2" x:Name="interactWithTextAssetProperties"  DataContext="{Binding Path=SelectedItem.Value.InteractWithAssetOptions, ElementName=LanguagePairDicsCombobox}" OptionChanged="interactWithTextAssetProperties_OptionChanged"/>
                                        <Button Grid.Row="4" x:Name="AddToInteractWithFileAssetEditButton" Content="Add" Click="AddToInteractWithFileAssetEditButton_Click" IsEnabled="False"/>
                                    </Grid>
                                </Grid>

                            </TabItem>
                            <!--TabItem Header="InteractWithMonoTextAsset">

                            </-->
                            <TabItem Header="InteractWithFileText">
                                <Grid DataContext="{Binding InteractWithFileText}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <DataGrid x:Name="InteractWithFileTextDataGridNews"  Grid.Row="0" Grid.Column="0" ItemsSource="{Binding News}" SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}" AutoGenerateColumns="False" Validation.ErrorTemplate="{x:Null}" GotFocus="InteractWithFileTextDataGridNews_GotFocus">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding assetsName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetName}" Header="AssetName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding containerPath}" Header="ContainerPath" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding ExternalRelativeFilePath}" Header="ExternalRelativeFilePath" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <DataGrid x:Name="InteractWithFileTextDataGridSaveds"  Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Saveds}" AutoGenerateColumns="False" GotFocus="InteractWithFileTextDataGridSaveds_GotFocus">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding assetsName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetName}" Header="AssetName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding containerPath}" Header="ContainerPath" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding ExternalRelativeFilePath}" Header="ExternalRelativeFilePath" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <StackPanel Orientation="Horizontal" DataContext="{Binding Path=SelectedItem}">
                                            <Label Content="Assets Name: " />
                                            <Label Content="{Binding assetsName}"/>
                                            <Label Content=", Asset Name: "/>
                                            <Label Content="{Binding assetName}"/>
                                            <Label Content=", Container Path: "/>
                                            <TextBlock Text="{Binding containerPath}" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                            <Label Content=", Use Container Path: "/>
                                            <CheckBox IsChecked="{Binding useContainerPath}" VerticalAlignment="Center" Checked="UseContainerPathCheckChanged" Unchecked="UseContainerPathCheckChanged"/>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Grid.Row="2" DataContext="{Binding Path=SelectedItem}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <DataGrid Grid.Row="0" Grid.Column="0" ItemsSource="{Binding SelectedItem.Value.Dic, ElementName=LanguagePairDicsComboboxOfWithFileText}" AutoGenerateColumns="False" >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Key}" Header="Key" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding Value.Original}" Header="Original" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding Path=Value.Translated}" Header="Translated" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <GridSplitter Grid.Column="1" 
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Center"
                                                      ShowsPreview="True"
                                                      Width="5"/>
                                        <TextBox Grid.Column="2" Text="{Binding SelectedItem.Value.TranslatedFileText, ElementName=LanguagePairDicsComboboxOfWithFileText, Mode=OneWay}" IsReadOnly="True" 
                                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                 ScrollViewer.CanContentScroll="True"/>
                                    </Grid>
                                    <Grid x:Name="InteractWithFileTextSelectedItemGrid" Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" DataContext="{Binding SelectedItem}" DataContextChanged="InteractWithFileTextSelectedItemGrid_DataContextChanged" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                                            <Label Content="Plugin:"/>
                                            <ComboBox x:Name="PluginInteractWithFileTextNamesCombobox" SelectedItem="{Binding InteractWithFileTextPluginName}" SelectionChanged="PluginInteractWithFileTextNamesCombobox_SelectionChanged"/>
                                        </StackPanel>
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ComboBox Grid.Column="0" x:Name="LanguagePairDicsComboboxOfWithFileText" ItemsSource="{Binding languagePairDics}" DisplayMemberPath="Key" SelectionChanged="LanguagePairDicsComboboxOfWithFileText_SelectionChanged" />
                                            <!--Button x:Name="LanguagePairDicsNewOfWithFileText" Grid.Column="1" Content="New" Click="LanguagePairDicsNewOfWithFileText_Click"/-->
                                            <!--Button x:Name="LanguagePairDicsRemoveOfWithFileText" Grid.Column="2" Content="Remove" Click="LanguagePairDicsRemoveOfWithFileText_Click"/-->
                                        </Grid>
                                        <local:TextAssetAssetMapOptionsProperties Grid.Row="2" x:Name="interactWithFileTextProperties"  DataContext="{Binding Path=SelectedItem.Value.InteractWithFileTextOptions, ElementName=LanguagePairDicsComboboxOfWithFileText}" OptionChanged="interactWithFileTextProperties_OptionChanged"/>
                                        <Button Grid.Row="4" x:Name="AddToDoneEditButton" Content="Add" Click="AddToDoneEditButton_Click" IsEnabled="False"/>
                                    </Grid>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Done(Test)">
                                <Grid DataContext="{Binding Path=Done}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="7*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <DataGrid Grid.Row="0" Grid.Column="0" ItemsSource="{Binding Saveds}" SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}" AutoGenerateColumns="False" Validation.ErrorTemplate="{x:Null}">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding assetsName}" Header="AssetsName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding assetName}" Header="AssetName" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding containerPath}" Header="ContainerPath" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding ExternalRelativeFilePath}" Header="ExternalRelativeFilePath" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <Button Grid.Row="1" x:Name="UpdateTestGetOriginalDicButton" Content="GetOriginalDic" Margin="5" Click="UpdateTestGetOriginalDicButton_Click"/>
                                        <Button Grid.Row="3" x:Name="UpdateTestLoadTranslatedFileTextButton" Content="LoadTranslatedFileText" Margin="5" Click="UpdateTestLoadTranslatedFileTextButton_Click"/>
                                        <Button Grid.Row="4" x:Name="UpdateTestGetTranslatedDicsButton" Content="GetTranslatedDic" Margin="5" Click="UpdateTestGetTranslatedDicsButton_Click"/>
                                        <Button Grid.Row="5" x:Name="UpdateTestGetUpdatedFileText" Content="GetUpdatedFileText" Margin="5" Click="UpdateTestGetUpdatedFileText_Click"/>
                                        <Button Grid.Row="6" x:Name="UpdateTestSaveFileTextToTempFolder" Content="SaveFileTextToTempFolder" Margin="5" Click="UpdateTestSaveFileTextToTempFolder_Click"/>
                                        <Button Grid.Row="7" x:Name="UpdateTestGetTranslatedText" Content="GetTranslatedText" Margin="5" Click="UpdateTestGetTranslatedText_Click"/>

                                        <Button Grid.Row="8" x:Name="UpdateTestDownloadOnlineResources" Content="Download All Online Resources" Margin="5" Click="UpdateTestDownloadOnlineResources_Click"/>
                                    </Grid>
                                    <Grid Grid.Column="1" DataContext="{Binding Path=SelectedItem}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Grid.Column="0" Content="OriginalText"/>
                                        <TextBox Grid.Row="1" Grid.Column="0"  x:Name="UpdateTestOriginalText" Text="{Binding OriginalText, Mode=OneWay}" IsReadOnly="True" 
                                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                 ScrollViewer.CanContentScroll="True"/>
                                        <Label Grid.Row="0" Grid.Column="1" Content="TranslatedText"/>
                                        <TextBox Grid.Row="1" Grid.Column="1" x:Name="UpdateTestTranslatedText" Text="{Binding TranslatedText, Mode=OneWay}" IsReadOnly="True" 
                                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                 ScrollViewer.CanContentScroll="True"/>
                                        <Label Grid.Row="2" Grid.Column="0" Content="languagePairDics"/>
                                        <ComboBox Grid.Row="2" Grid.Column="1" x:Name="UpdateTestLanguagePairDicsCombobox" ItemsSource="{Binding languagePairDics}" DisplayMemberPath="Key" />
                                        <Label Grid.Row="3" Grid.Column="0" Content="Dic"/>
                                        <DataGrid Grid.Row="4" Grid.Column="0" x:Name="UpdateTestDic"  ItemsSource="{Binding SelectedItem.Value.Dic, ElementName=UpdateTestLanguagePairDicsCombobox}" AutoGenerateColumns="False" >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Key}" Header="Key" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding Value.Original}" Header="Original" IsReadOnly="True"/>
                                                <DataGridTextColumn Binding="{Binding Path=Value.Translated}" Header="Translated" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <Label Grid.Row="3" Grid.Column="1" Content="TranslatedFileText"/>
                                        <TextBox Grid.Row="4" Grid.Column="1" x:Name="UpdateTestTranslatedFileText" Text="{Binding SelectedItem.Value.TranslatedFileText, ElementName=UpdateTestLanguagePairDicsCombobox, Mode=OneWay}" 
                                                 IsReadOnly="True" 
                                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                 ScrollViewer.CanContentScroll="True"/>
                                    </Grid>
                                </Grid>
                            </TabItem>
                            <!--TabItem Header="Patch Process Test(X)">
                                
                            </-->
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Online Resources">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" FlowDirection="RightToLeft" Margin="5">
                            <Button x:Name="RemoveSelectedOnlineResources" Content="Remove" Width="Auto"/>
                        </StackPanel>
                        <DataGrid Grid.Row="1" x:Name="OnlineResourcesDataGrid" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding filePath}" Header="File Name" Width="1*"/>
                                <DataGridTextColumn Binding="{Binding URL}" Header="URL" Width="1*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Copy Resources">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" FlowDirection="RightToLeft" Margin="5">
                            <Button x:Name="RemoveSelectedCopyResourcesManual" Content="Remove" Width="Auto"/>
                        </StackPanel>
                        <DataGrid Grid.Row="1" x:Name="CopyResourcesManualDataGrid" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding ResourcesFileFromProjectFolder}" Header="ResourcesFileFromProjectFolder" Width="1*"/>
                                <DataGridTextColumn Binding="{Binding ResourcesFileTargetRelativePath}" Header="ResourcesFileTargetRelativePath" Width="1*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Updater">
                    <Grid x:Name="UpdaterGrid" Margin="5">
                        <Grid.Resources>
                            <local:EnumBooleanConverter x:Key="enumBooleanConverter" />
                        </Grid.Resources>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Current Version: "/>
                                <TextBox Text="{Binding Path=currentVersion}"/>
                            </StackPanel>
                            <!-- https://stackoverflow.com/questions/397556/how-to-bind-radiobuttons-to-an-enum -->
                            <RadioButton x:Name="NoneRadioButton" IsChecked="{Binding Path=Selected, Converter={StaticResource enumBooleanConverter}, ConverterParameter=None}">
                                <TextBlock Text="None" VerticalAlignment="Center"/>
                            </RadioButton>

                            <RadioButton x:Name="ManualRadioButton" IsChecked="{Binding Path=Selected, Converter={StaticResource enumBooleanConverter}, ConverterParameter=Manual}">
                                <TextBlock Text="Manual" VerticalAlignment="Center"/>
                            </RadioButton>
                            <StackPanel Margin="20,0,0,0" IsEnabled="{Binding Path=IsChecked, ElementName=ManualRadioButton, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Current Version Text File URL: "/>
                                    <TextBox Text="{Binding Path=currentVersionURL}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Lastest Patcher Zip File Download URL: "/>
                                    <TextBox Text="{Binding Path=manualZipURL}"/>
                                </StackPanel>
                            </StackPanel>
                            <RadioButton x:Name="GitHubRadioButton" IsChecked="{Binding Path=Selected, Converter={StaticResource enumBooleanConverter}, ConverterParameter=GitHub}">
                                <TextBlock Text="GitHub" VerticalAlignment="Center"/>
                            </RadioButton>
                            <StackPanel Margin="20,0,0,0" IsEnabled="{Binding Path=IsChecked, ElementName=GitHubRadioButton, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="GitHub Owner Name: "/>
                                    <TextBox Text="{Binding Path=gitHubOwner}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="GitHub Repo Name: "/>
                                    <TextBox Text="{Binding Path=gitHubRepo}"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Project Setting">
                    <Grid x:Name="ProjectSettingsGrid">
                        <StackPanel Margin="5">
                            <CheckBox x:Name="DownloadOnlineResourcesWhenBuildCheckbox" IsChecked="{Binding Path=DownloadOnlineResourcesWhenBuild}">
                                <TextBlock Text="Download online resources when building."/>
                            </CheckBox>
                            <CheckBox x:Name="ZipBuildFolderAfterBuildCheckbox" IsChecked="{Binding Path=ZipBuildFolderAfterBuild}">
                                <TextBlock Text="Zip Build folder after building."/>
                            </CheckBox>
                            <CheckBox x:Name="CreateCurrentVersionTxtFileAfterBuildCheckbox" IsChecked="{Binding Path=CreateCurrentVersionTxtFileAfterBuild}">
                                <TextBlock Text="Create CurrentVersion.txt file after build if currentVersion is defined."/>
                            </CheckBox>
                            <CheckBox x:Name="RemoveBuildFolderBeforeBuildCheckbox" IsChecked="{Binding Path=RemoveBuildFolderBeforeBuild}">
                                <TextBlock Text="Remove Build folder before building."/>
                            </CheckBox>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Zip file name (if empty, GameName is used): " Margin="20,0,0,0"/>
                                <TextBox x:Name="ZipFileNameTextBox" Text="{Binding Path=ZipFileName}"/>
                            </StackPanel>
                            <CheckBox x:Name="IsZipFileNameConatinVersionCheckbox" IsChecked="{Binding Path=IsZipFileNameConatinVersion}">
                                <TextBlock Text="Zip file name contain currentVersion."/>
                            </CheckBox>
                            <TextBlock Text="Set icon, splash, main image of patcher(click image)" Margin="20,0,0,0"/>
                            <!-- https://stackoverflow.com/questions/30174201/click-event-for-wpf-image -->
                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="20,0,0,0">
                                <StackPanel Margin="5">
                                    <TextBlock Text="Icon(*.ico)"/>
                                    <Button Style="{StaticResource ImageButtonStyle}" Click="PatcherIconImage_Click">
                                        <Image x:Name="PatcherIconImage" Source="defaultIcon.ico" Width="90" Height="90" />
                                    </Button>
                                </StackPanel>
                                <StackPanel Margin="5">
                                    <TextBlock Text="Splash(*.png, 16:9)"/>
                                    <Button Style="{StaticResource ImageButtonStyle}" Click="PatcherSplashImage_Click">
                                        <Image x:Name="PatcherSplashImage" Source="DefaultSplash.png" Width="160" Height="90"/>
                                    </Button>
                                </StackPanel>
                                <StackPanel Margin="5">
                                    <TextBlock Text="Main(*.png, 16:9)"/>
                                    <Button Style="{StaticResource ImageButtonStyle}" Click="PatcherMainImage_Click">
                                        <Image x:Name="PatcherMainImage" Source="DefaultMain.png" Width="160" Height="90"/>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</Window>
